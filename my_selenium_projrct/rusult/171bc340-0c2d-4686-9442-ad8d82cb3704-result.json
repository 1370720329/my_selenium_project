{"name": "test_login_ok", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <testcase.test_login_ok.Test_login object at 0x000001B31FE352B0>\n\n    @allure.feature('测试登录成功')\n    # 测试登录成功的用例\n    @pytest.mark.run(order=1)\n    @pytest.mark.dependency()  # 这是依赖关系装饰器\n    \n    def test_login_ok(self) :\n        # 测试数据\n        loc = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[1]/div/div/input')  # 输入用户\n        loc2 = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[2]/div/div/input')  # 输入密码\n        loc3 = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[3]/div/button/span')  # 登录按钮\n        self.driver.implicitly_wait(5)\n        url = 'http://192.168.101.101:7061/login'\n        user = '1370720329'\n        pwd = '1370720329'\n    \n        # 测试代码\n        # 测试报告中的步骤\n        with allure.step('登录页面') :\n            self.driver.get(url)\n    \n        with allure.step('输入账号') :\n            self.input_text(user, *loc)\n    \n        with allure.step('输入密码') :\n            self.input_text(pwd, *loc2)\n    \n        with allure.step('点击登录') :\n            self.clicks(*loc3)\n        sleep(5)\n        # 日志信息\n        self.log.debug('test1登录的URL是：%s', format(url))\n        self.log.debug('test1登录的账号是：%s', format(user))\n        self.log.debug('test1登录的密码是：%s', format(pwd))\n    \n        # 根据登录后的页面标题判断是否登录成功\n        try :\n            # a = self.driver.find_element_by_xpath('/html/body/div[1]/div/div[1]/div[2]/div[2]/div/span').text\n    \n            a = self.get_title()\n            print(a)\n>           assert '高校大数据治理业务平台' == a\nE           AssertionError: assert '高校大数据治理业务平台' == '大数据治理平台'\nE             - 大数据治理平台\nE             + 高校大数据治理业务平台\nE             ? ++     ++\n\ntestcase\\test_login_ok.py:70: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_login_ok.Test_login object at 0x000001B31FE352B0>\n\n    @allure.feature('测试登录成功')\n    # 测试登录成功的用例\n    @pytest.mark.run(order=1)\n    @pytest.mark.dependency()  # 这是依赖关系装饰器\n    \n    def test_login_ok(self) :\n        # 测试数据\n        loc = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[1]/div/div/input')  # 输入用户\n        loc2 = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[2]/div/div/input')  # 输入密码\n        loc3 = (By.XPATH, '/html/body/div/div/div/div[1]/form/div[3]/div/button/span')  # 登录按钮\n        self.driver.implicitly_wait(5)\n        url = 'http://192.168.101.101:7061/login'\n        user = '1370720329'\n        pwd = '1370720329'\n    \n        # 测试代码\n        # 测试报告中的步骤\n        with allure.step('登录页面') :\n            self.driver.get(url)\n    \n        with allure.step('输入账号') :\n            self.input_text(user, *loc)\n    \n        with allure.step('输入密码') :\n            self.input_text(pwd, *loc2)\n    \n        with allure.step('点击登录') :\n            self.clicks(*loc3)\n        sleep(5)\n        # 日志信息\n        self.log.debug('test1登录的URL是：%s', format(url))\n        self.log.debug('test1登录的账号是：%s', format(user))\n        self.log.debug('test1登录的密码是：%s', format(pwd))\n    \n        # 根据登录后的页面标题判断是否登录成功\n        try :\n            # a = self.driver.find_element_by_xpath('/html/body/div[1]/div/div[1]/div[2]/div[2]/div/span').text\n    \n            a = self.get_title()\n            print(a)\n            assert '高校大数据治理业务平台' == a\n    \n        except Exception as b :\n>           self.log.error('登录失败，请检查！', b)\n\ntestcase\\test_login_ok.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\Python\\lib\\logging\\__init__.py:1463: in error\n    self._log(ERROR, msg, args, **kwargs)\nE:\\Python\\lib\\logging\\__init__.py:1577: in _log\n    self.handle(record)\nE:\\Python\\lib\\logging\\__init__.py:1587: in handle\n    self.callHandlers(record)\nE:\\Python\\lib\\logging\\__init__.py:1649: in callHandlers\n    hdlr.handle(record)\nE:\\Python\\lib\\logging\\__init__.py:950: in handle\n    self.emit(record)\nE:\\Python\\lib\\site-packages\\_pytest\\logging.py:328: in emit\n    super().emit(record)\nE:\\Python\\lib\\logging\\__init__.py:1089: in emit\n    self.handleError(record)\nE:\\Python\\lib\\logging\\__init__.py:1081: in emit\n    msg = self.format(record)\nE:\\Python\\lib\\logging\\__init__.py:925: in format\n    return fmt.format(record)\nE:\\Python\\lib\\site-packages\\_pytest\\logging.py:89: in format\n    return super().format(record)\nE:\\Python\\lib\\logging\\__init__.py:664: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 40, E:\\Python脚本文件夹\\my_selenium_projrct\\testcase\\test_login_ok.py, 73, \"登录失败，请检查！\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nE:\\Python\\lib\\logging\\__init__.py:369: TypeError"}, "steps": [{"name": "登录页面", "status": "passed", "start": 1626853402277, "stop": 1626853404985}, {"name": "输入账号", "status": "passed", "start": 1626853404985, "stop": 1626853405121}, {"name": "输入密码", "status": "passed", "start": 1626853405121, "stop": 1626853405269}, {"name": "点击登录", "status": "passed", "start": 1626853405269, "stop": 1626853405336}], "attachments": [{"name": "log", "source": "1ca54eff-59de-4db8-b834-d6ed3183235e-attachment.txt", "type": "text/plain"}], "start": 1626853402275, "stop": 1626853410359, "uuid": "501b8f55-d57b-43dc-a5e7-02aced24af86", "historyId": "35dd96bb98b4c499720eb7d6f0c87a15", "testCaseId": "dd524a7f1d70377bdba26d80bc68e371", "fullName": "testcase.test_login_ok.Test_login#test_login_ok", "labels": [{"name": "feature", "value": "测试登录成功"}, {"name": "tag", "value": "run(order=1)"}, {"name": "tag", "value": "dependency"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login_ok"}, {"name": "subSuite", "value": "Test_login"}, {"name": "host", "value": "DESKTOP-CFC9S14"}, {"name": "thread", "value": "20372-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login_ok"}]}